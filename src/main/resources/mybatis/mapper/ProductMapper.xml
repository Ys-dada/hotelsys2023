<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    一个映射文件了说明如何对一个对象存储、读取、修改和删除，主要提供了若干条映射条目以及相关的SQL语句。
   每个mapper的namespace类似于一个唯一标识符，是内部的映射条目的归属范围
 
   一个映射条目主要就是为了某个dao方法服务的，所以其id一般也设置为和dao方法名保持一致。  
   
-->
<mapper namespace="mybatis.mapper.ProductMapper">

   <select id="loadProducts" resultType="Product">
        select * from tbl_products
   </select>

    <select id="loadProductsByHelper" resultType="Product" parameterType="com.abc.hotelsys.service.ProductQueryHelper">
        select * from tbl_products
        <if test="qryProductType!=null">
            where product_type=#{qryProductType}
        </if>
    </select>

    <select id="getProductById" parameterType="java.lang.Integer" resultType="Product">
        select * from tbl_products where product_id=#{productId}
    </select>

    <delete id="delProductById" parameterType="java.lang.Integer">
        delete from tbl_products where product_id=#{productId}
    </delete>

    <update id="updateProduct" parameterType="Product">
        update tbl_products
        set product_name=#{productName},product_price=#{productPrice},product_count=#{productCount} ,product_type=#{productType}
        where product_id=#{productId}
    </update>

    <insert id="addProduct" parameterType="Product">
        insert into tbl_products(product_name,product_price,product_count,product_type)
        values(#{productName},#{productPrice},#{productCount},#{productType})
    </insert>
</mapper>